name: CI/CD Pipeline

on:
  push:
    branches: [main, develop, staging]
  pull_request:
    branches: [main, develop, staging]

env:
  NODE_VERSION: '18'

jobs:
  # Test & Lint
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install --no-optional
          npm rebuild
        
      - name: Run formatting check
        run: npm run format:check
        
      - name: Build application
        run: npm run build

  # Deploy to Development (develop branch)
  deploy-develop:
    name: Deploy to Development
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: development
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install --no-optional

          npm rebuild
        
      - name: Build for development
        run: npm run build
        env:
          NODE_ENV: development
          
      - name: Deploy to development
        run: |
          echo "üöÄ Deploying to development environment"
          # –¢—É—Ç –±—É–¥–µ –∫–æ–º–∞–Ω–¥–∞ –¥–µ–ø–ª–æ—é –Ω–∞ dev —Å–µ—Ä–≤–µ—Ä
          # –ù–∞–ø—Ä–∏–∫–ª–∞–¥: rsync, scp, –∞–±–æ –¥–µ–ø–ª–æ–π –Ω–∞ Vercel/Netlify

  # Deploy to Staging (staging branch)
  deploy-staging:
    name: Deploy to Staging
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install --no-optional

          npm rebuild
        
      - name: Build for staging
        run: npm run build
        env:
          NODE_ENV: staging
          
      - name: Deploy to staging
        run: |
          echo "üöÄ Deploying to staging environment"
          # –¢—É—Ç –±—É–¥–µ –∫–æ–º–∞–Ω–¥–∞ –¥–µ–ø–ª–æ—é –Ω–∞ staging —Å–µ—Ä–≤–µ—Ä

  # Deploy to Production (main branch)
  deploy-production:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install --no-optional

          npm rebuild
        
      - name: Build for production
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Deploy to production
        run: |
          echo "üöÄ Deploying to production environment"
          # –¢—É—Ç –±—É–¥–µ –∫–æ–º–∞–Ω–¥–∞ –¥–µ–ø–ª–æ—é –Ω–∞ production —Å–µ—Ä–≤–µ—Ä
